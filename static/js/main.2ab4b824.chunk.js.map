{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","allPost","likes","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","clazz","Button","onClick","PostListItem","onDelete","onToggleImportant","onToggleLike","classNames","important","like","PostList","posts","elements","item","id","itemsProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","color","AppBlock","App","data","deleteItem","addItem","maxId","body","newItem","index","findIndex","elem","slice","old","items","length","indexOf","visiblePost","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ab4b824.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: space-between;\n    h1{\n        font-size: 26px;\n        color: ${ props => props.colored ? 'red' : 'blue' };\n        :hover{\n         transition:  0.7s ;\n         font-size: 30px;\n        }\n    }\n    h2 {\n        font-size: 1.2rem;\n        color: #ca8c8c;\n    }\n`\n\nconst CloneHeader = styled (Header)`\n    background-color: #FFD700;\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n`\n\nconst AppHeader = ({allPost,likes}) => {\n    return (\n        <>\n            <Header colored>\n                <h1>Alex-AGD</h1>\n                <h2>{allPost} Записей, из них понравилось {likes}</h2>\n            </Header>\n {/*           <CloneHeader>\n                <h1>Test</h1>\n                <h1>Test</h1>\n                <h1>Test</h1>\n                <h1>Test</h1>\n\n            </CloneHeader>*/}\n        </>\n    )\n}\n\nexport default AppHeader;","import React, { Component } from 'react';\nimport './search-panel.css'\n\nexport default class SearchPanel extends Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            term: ''\n        }\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    }\n\n\n    onUpdateSearch(e){\n        const term = e.target.value;\n        this.setState({ term });\n        this.props.onUpdateSearch(term);\n    }\n\n    render () {\n        return (\n            <input\n                className=\"form-control search-input\"\n                type=\"text\"\n                placeholder=\"Поиск по записям\"\n                onChange={this.onUpdateSearch}\n            />\n        )\n    }\n}\n\n","import React, { Component } from 'react';\r\nimport './post-status-filter.css'\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default class PostStatusFilter extends Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'Все' },\r\n            { name: 'like', label: 'Понравилось' },\r\n        ]\r\n    }\r\n\r\n    render () {\r\n        const buttons = this.buttons.map (({ name, label }) => {\r\n            const {filter, onFilterSelect } = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-secondary'\r\n            return (\r\n                <Button\r\n                    key={ name }\r\n                    className={ `${ clazz }` }\r\n                    onClick={ () => onFilterSelect(name) }>{ label }\r\n                </Button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                { buttons }\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './post-list-item.css'\r\n\r\n\r\nexport default class PostListItem extends Component {\r\n\r\n    render () {\r\n\r\n        const { label, onDelete, onToggleImportant, onToggleLike,important,like  } = this.props\r\n        let classNames = 'app-list-item d-flex justify-content-between';\r\n\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n        return (\r\n            <div>\r\n                <div className={ classNames }>\r\n                <span className='app-list-item-label'\r\n                      onClick={ onToggleLike }>\r\n                    { label }\r\n                </span>\r\n                    <div className='d-flex justify-content-center align-items-center'>\r\n                        <button type='button'\r\n                                className='btn-star btm-sm'\r\n                                onClick={ onToggleImportant }>\r\n                            <i className='fa fa-star'/>\r\n                        </button>\r\n                        <button\r\n                            onClick={onDelete}\r\n                            type='button'\r\n                            className='btn-trash btm-sm'>\r\n                            <i className='fa fa-trash-o'/>\r\n                        </button>\r\n\r\n                        <i className='fa fa-heart'/>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PostListItem from \"../post-list-item/post-list-item\";\r\nimport './post-list.css'\r\nimport { ListGroup } from 'reactstrap';\r\n\r\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLike }) => {\r\n//{...item} ES8\r\n    const elements = posts.map ((item) => {\r\n        const {id, ...itemsProps} = item;\r\n        return (\r\n            <li key={id} className='list-group-item' >\r\n                <PostListItem\r\n                    {...itemsProps}\r\n                    onDelete={ () => onDelete(id)}\r\n                    onToggleImportant={ () => onToggleImportant(id) }\r\n                    onToggleLike={ () => onToggleLike(id) }\r\n                  />\r\n            </li>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <ListGroup className=\"app-list\">\r\n                { elements }\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostList","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport default class PostAddForm extends Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onValueChange(e){\r\n        this.setState({\r\n            text: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit(e){\r\n        // отменяем стадрт повед браузера\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text)\r\n        this.setState({\r\n            text: ''\r\n        })\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}    >\r\n                <input type=\"text\"\r\n                       placeholder=\"Ваш текст\"\r\n                       className=\"form-control new-post-label\"\r\n                       onChange={this.onValueChange}\r\n                       //контролируемый элемент для очищ input\r\n                       value={this.state.text}\r\n\r\n                />\r\n\r\n                <Button type=\"submit\"\r\n                        color=\"success\"\r\n                        >Добавить </Button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport AppHeader from \"../app-header/app-header\";\nimport SearchPanel from \"../search-panel/search-panel\";\nimport PostStatusFilter from \"../post-status-filter/post-status-filter\";\nimport PostList from \"../post-list/post-list\";\nimport PostAddForm from \"../post-add-form/post-add-form\";\nimport './app.css'\nimport styled from 'styled-components';\n\nconst AppBlock = styled.div`\n  margin: 0 auto;\n  max-width: 800px;\n  background-color: #cacac9;\n`\n\nexport default class App extends Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            data: [\n                { label: 'Impedit maxime minima nesciunt numquam quos.', important: false, like: false, id: 1 },\n                { label: 'Ab accusamus commodi cupiditate.', important: true, like: false, id: 2 },\n                { label: 'Lorem ipsum dolor sit amet.', important: false, like: false, id: 3 }\n            ],\n            term: '',\n            filter: 'all'\n\n        };\n        this.deleteItem = this.deleteItem.bind (this);\n        this.addItem = this.addItem.bind (this);\n        this.onToggleImportant = this.onToggleImportant.bind (this);\n        this.onToggleLike = this.onToggleLike.bind (this);\n        this.onUpdateSearch = this.onUpdateSearch.bind (this);\n        this.onFilterSelect = this.onFilterSelect.bind (this);\n\n        this.maxId = 4;\n    }\n\n    addItem (body) {\n        const newItem = {\n            label: body,\n            important: false,\n            id: this.maxId++\n        }\n        this.setState (({ data }) => {\n            const newArr = [ ...data, newItem ];\n            return {\n                data: newArr\n            }\n        })\n    }\n\n\n    deleteItem (id) {\n        this.setState (({ data }) => {\n            const index = data.findIndex (elem => elem.id === id)\n\n            const newArr = [ ...data.slice (0, index), ...data.slice (index + 1) ];\n            return {\n                data: newArr\n            }\n        });\n    }\n\n\n    onToggleImportant (id) {\n        this.setState (({ data }) => {\n            const index = data.findIndex (elem => elem.id === id);\n\n            const old = data[ index ];\n            const newItem = { ...old, important: !old.important }\n\n            const newArr = [ ...data.slice (0, index), newItem, ...data.slice (index + 1) ];\n\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    onToggleLike (id) {\n        this.setState (({ data }) => {\n            const index = data.findIndex (elem => elem.id === id);\n\n            const old = data[ index ];\n            const newItem = { ...old, like: !old.like }\n\n            const newArr = [ ...data.slice (0, index), newItem, ...data.slice (index + 1) ];\n\n            return {\n                data: newArr\n            }\n        })\n    }\n\n    searchPost (items, term) {\n        if (term.length === 0) {\n            return items\n        }\n\n        return items.filter ((item) => {\n            return item.label.indexOf (term) > -1\n        })\n    }\n\n    filterPost (items, filter) {\n        if (filter === 'like') {\n            return items.filter (item => item.like)\n        } else {\n            return items;\n        }\n\n    }\n\n    onUpdateSearch (term) {\n        this.setState ({ term })\n    }\n    onFilterSelect (filter){\n        this.setState ({ filter })\n\n    }\n\n    render () {\n        const { data, term, filter } = this.state\n\n        const likes = data.filter (item => item.like).length;\n        const allPost = data.length\n\n        const visiblePost = this.filterPost (this.searchPost (data, term), filter);\n\n        return (\n            <AppBlock>\n                <AppHeader likes={ likes }\n                           allPost={ allPost }/>\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel onUpdateSearch={ this.onUpdateSearch }\n                    />\n                    <PostStatusFilter\n                    filter={filter}\n                    onFilterSelect={this.onFilterSelect}\n                    />\n                </div>\n                <PostList\n                    posts={ visiblePost }\n                    onDelete={ this.deleteItem }\n                    onToggleImportant={ this.onToggleImportant }\n                    onToggleLike={ this.onToggleLike }\n                />\n                <PostAddForm\n                    onAdd={ this.addItem }/>\n            </AppBlock>\n        )\n    }\n}\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport './index.css';\nimport App from './components/app/app';\n\n\nReactDOM.render (\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById ('root')\n);\n\n\n"],"sourceRoot":""}